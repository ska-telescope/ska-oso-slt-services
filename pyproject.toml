[tool.poetry]
name = "ska-oso-slt-services"
version = "0.3.1"
description = "Shift Log Tool"
authors = ["Team Nakshatra"]
license= "BSD-3-Clause"
readme = "README.md"
repository = "https://gitlab.com/ska-telescope/oso/ska-oso-slt-services"
documentation = "https://developer.skao.int/projects/ska-oso-slt-services/en/latest/index.html"
keywords = []
packages = [
    { include = "ska_oso_slt_services", from = "src" }
]
include = [
    { path = 'tests' }
]
classifiers = [
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
]
[[tool.poetry.source]]
name = 'ska-nexus'
url = 'https://artefact.skao.int/repository/pypi-internal/simple'

[[tool.poetry.source]]
name = 'PyPI'
priority = 'primary'


[tool.poetry.dependencies]
python = "^3.10"
python-dateutil = "^2.8.2"
ska-ser-logging = "^0.4.1"
ska-db-oda  = "7.1.1"
pydantic = "^2.7"
elasticsearch = "^8.14.0"
pyhdbpp = "^1.5.12"
annotated-types = "^0.7.0"
elastic-transport = "^8.15.0"
fastapi = "^0.111.0"
psycopg2-binary = "^2.9.9"
tzdata = "^2024.2"
boto3= "^1.35.29"
deepdiff = "^7.0.0"
ska-ser-skuid = "^3.3.3"


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
pytest-forked = "^1.6.0"
pytest-json-report = "^1.5.0"
black = "^24.0.0"
pycodestyle = "^2.8.0"
isort = "^5.10.1"
pylint-junit = "^0.3.2"
flake8 = "^7.0.0"
deepdiff = "^7.0.0"


[tool.poetry.group.docs.dependencies]
sphinxcontrib-openapi= "^0.8.1"
myst-parser = "^3.0.0"
ska-ser-sphinx-theme = "^0.2.0"
sphinx = "^7.0.2"



[tool.pytest.ini_options]
addopts = "-v"

[tool.flake8]
docstring-style = "sphinx"
rst-directives = "literalinclude"
rst-roles = ["py:attr", "py:class", "py:const", "py:exc", "py:func", "py:meth", "py:mod"]
enable = "DAR104"
max-complexity = 10

# E203 and W503 conflict with black
ignore = ["E203", "W503"]

[tool.pylint.messages_control]
disable = [
    "duplicate-code",
    "fixme",
]
enable = ["useless-suppression"]

[tool.pylint.similarities]
min-similarity-lines = 7
ignore-imports = "yes"


[tool.black]
line-length = 88
preview = true
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | src/ska_oso_slt_services/rest/openapi/__submodules__
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
profile = "black"
line_length = 88
skip = "src/ska_oso_slt_services/rest/openapi/__submodules__"

[tool.pylint]
disable = "C,R,W3101,W0511"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

